Взаимодействие Классов:

GameInput сообщает Player о действиях пользователя, таких как команды на атаку.

Player управляет основными действиями игрового персонажа, такими как перемещение и атака. Перемещение отображается через PlayerVisual, а атака происходит через ActiveWeapon.

ActiveWeapon служит посредником, который активирует оружие игрока, в данном случае Sword.

Sword отвечает за выполнение атаки и обработку столкновений с объектами, такими как EnemyEntity.

EnemyAI управляет поведением врагов в игре. Он использует Utils для генерации случайных действий и EnemyEntity для реализации взаимодействий, таких как получение урона.
Также он управляет анимациями через SkeletonVisual.


Взаимодействие методов:


GameInput
Awake(): Инициализация GameInput.
PlayerAttack_started(): Реагирует на атаку игрока и вызывает событие OnPlayerAttack.

Player
Awake(): Установка статического экземпляра Player.
GameInput_OnPlayerAttack()`: Отправляет команду атаки к ActiveWeapon.
Update(): Получает вектор движения из GameInput.
FixedUpdate(): Обрабатывает движение игрока.
HandleMovement(): Реализует логику движения.

ActiveWeapon
Awake(): Инициализация ActiveWeapon.
Update(): Слежение за позицией курсора.
FollowMousePosition(): Определяет ориентацию оружия.
GetActiveWeapon(): Возвращает Sword.

Sword
Awake(): Инициализация компонентов Sword.
Start(): Выключает коллайдер оружия.
OnTriggerEnter2D(): Обрабатывает столкновения с врагами.
AttackColliderTurnOn(): Включает коллайдер оружия.
AttackColliderTurnOffOn(): Переключает состояние коллайдера.
Attack(): Активирует коллайдер и событие атаки.

SwordVisual и SwordSlashVisual
Awake(): Настройка аниматора.
Start(): Подписка на событие OnSwordSwing из Sword.
Sword_OnSwordSwing(): Запускает анимацию атаки.

EnemyEntity
Awake(): Настройка PolygonCollider2D.
Start(): Инициализация здоровья.
OnTriggerEnter2D(): Детектирование атаки.
TakeDamage(): Процесс нанесения урона.
PolygonColliderTurnOff(): Выключение коллайдера.
PolygonColliderTurnOn(): Включение коллайдера.
DetectDeath(): Проверка условий смерти.

EnemyAI
Awake(): Настройка NavMeshAgent и начального состояния.
Update(): Обработка текущего состояния AI.
StateHandler(): Управление переключением состояний.
ChasingTarget(): Преследование цели.
CheckCurrentState(): Проверка и переключение состояний.
AttackingTarget(): Атака цели.
MovementDirectionHandler(): Обработка направления движения.
Roaming(): Роуминг в случайную позицию.
GetRoamingPosition(): Получение позиции для роуминга.
ChangeFacingDirection(): Изменение направления взгляда.
IsRunning(): Проверка, движется ли AI.
GetRoamingAnimationSpeed(): Получение скорости анимации роуминга.

SkeletonVisual
Awake(): Инициализация Animator.
Start(): Подписка на события EnemyAI.
OnDestroy(): Отписка от событий EnemyAI.
Update(): Обновление аниматора с состояниями AI.
TriggerAttackAnimationTurnOff(): Выключение анимации атаки.
TriggerAttackAnimationTurnOn(): Включение анимации атаки.
_enemyAI_OnEnemyAttack(): Обработчик события атаки AI.

PlayerVisual
Awake(): Инициализация компонентов визуальной части игрока.
Update(): Обновление анимаций и ориентации спрайта игрока.
AdjustPlayerFacingDirection(): Настройка направления лица игрока.

Utils
GetRandomDir(): Генерирует и возвращает случайный вектор направления для использования классом EnemyAI при выборе случайного направления движения в состоянии блуждания.
